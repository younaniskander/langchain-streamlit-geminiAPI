import streamlit as st
import google.generativeai as genai
import os
from langchain_core.chat_history import InMemoryChatMessageHistory

# Load environment variables from .env file (if using)
from dotenv import load_dotenv
load_dotenv()

# Configure the Google Generative AI with your API key
genai.configure(api_key=os.environ['API_KEY'])  # Ensure API_KEY is correctly set

# Store for chat histories, using session id to manage each conversation separately
store = {}

def get_session_history(session_id: str) -> InMemoryChatMessageHistory:
    """Retrieve the chat history for a given session id."""
    if session_id not in store:
        store[session_id] = InMemoryChatMessageHistory()
    return store[session_id]

# Initialize the generative model
model = genai.GenerativeModel("gemini-1.5-flash")

# Streamlit UI setup
st.set_page_config(page_title="Chatbot with Session Management")
st.header("Hey, let's chat!")

# Session management based on user input
session_id = st.text_input("Enter your session ID:", value="1")  # Default to session ID "1"

# Create an input field for the user's message
user_input = st.text_input("You:", "")

# Handle user input and generate response
if user_input:
    # Store the user message in memory
    session_history = get_session_history(session_id)
    session_history.messages.append({"role": "user", "content": user_input})  # Ensure messages are stored

    # Generate a response using the Google Generative AI model
    response = model.generate_content(user_input)  # Call the model's generate_content method

    # Store the assistant's response in memory
    session_history.messages.append({"role": "assistant", "content": response.text})  # Store the assistant's reply

    st.write("### Response:")
    st.write(response.text)  # Show the response generated by the model

# Displaying chat history
if session_id in store:
    st.write("### Conversation History:")
    for message in store[session_id].messages:  # Access the messages within the session
        role = "Assistant" if message['role'] == 'assistant' else "You"
        st.write(f"**{role}:** {message['content']}")